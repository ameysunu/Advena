name: Flutter Build IDX

on:  
  push:
    branches:
      - idx

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.2'

      - name: Cache Flutter SDK
        uses: actions/cache@v2
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-cache-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pub-cache-


      - name: Install dependencies
        run: flutter pub get
        working-directory: advena_flutter

      - name: Cache Gradle
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Cache Android SDK components
        uses: actions/cache@v2
        with:
          path: |
            /usr/local/lib/android/sdk/platform-tools
            /usr/local/lib/android/sdk/emulator
            /usr/local/lib/android/sdk/tools
            /usr/local/lib/android/sdk/build-tools/30.0.3
          key: ${{ runner.os }}-android-sdk-${{ hashFiles('**/sdk/licenses') }}
          restore-keys: |
            ${{ runner.os }}-android-sdk-

      - name: Create .env file
        run: echo "TICKETMASTER_API_KEY=${{ secrets.TICKETMASTER_API_KEY }}" > .env
        working-directory: advena_flutter

      - name: Generate firebase_options.dart
        run: echo "$FIREBASE_OPTIONS_CONTENT" > advena_flutter/lib/firebase_options.dart
        env:
          FIREBASE_OPTIONS_CONTENT: ${{ secrets.FIREBASE_OPTIONS }}

      - name: Run Flutter build
        run: flutter build apk
        working-directory: advena_flutter
